services:
  nginx-proxy:
    build: nginx
    environment:
      - FLASK_SERVER_ADDR=mixtapestudy:8000
    ports:
      - "80:80"
    depends_on:
      - mixtapestudy
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/health-check || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 3
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: local
      POSTGRES_DB: mixtapestudy
    ports:
      - "5432:5432"
    healthcheck:
      #test: [ "CMD-SHELL", "pg_isready --username=local --dbname=mixtapestudy" ]
      test: [ "CMD-SHELL", "psql --username=local --dbname=mixtapestudy -c 'SELECT 1'" ]
      interval: 2s
      timeout: 10s
      retries: 3
  alembic:
    build: .
    command: ["alembic", "upgrade", "head"]
    environment:
      DATABASE_URL: "${DATABASE_URL}"
    depends_on:
      postgres:
        condition: service_healthy
  migration_done:
    # Dummy image for commands to be sure migration is complete
    image: alpine
    command: ["date"]
    depends_on:
      alembic:
        condition: service_completed_successfully
  mixtapestudy:
    build: .
    ports:
      - "8000:8000"
    environment:
      OAUTH_REDIRECT_BASE_URL: "http://127.0.0.1"
      # Set these in a .env file
      SPOTIFY_CLIENT_SECRET: "${SPOTIFY_CLIENT_SECRET}"
      SPOTIFY_CLIENT_ID: "${SPOTIFY_CLIENT_ID}"
      SESSION_SECRET: "${SESSION_SECRET}"
      DATABASE_URL: "${DATABASE_URL}"
      LISTENBRAINZ_API_KEY: "${LISTENBRAINZ_API_KEY}"
      RECOMMENDATION_SERVICE: "listenbrainz"  # listenbrainz | spotify
    volumes:
      - ./build/log:/home/app/log
    depends_on:
      migration_done:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8000/flask-health-check || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 3
